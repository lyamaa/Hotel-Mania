# Generated by Django 3.2.3 on 2021-06-10 10:51

import autoslug.fields
import commons.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_1', models.CharField(max_length=200)),
                ('street_2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=50)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='CertificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_name', models.CharField(max_length=255)),
                ('system_name', models.CharField(editable=False, max_length=255)),
                ('entered_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Certification Type',
                'verbose_name_plural': 'Certification Types',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('company_identification_number', models.CharField(max_length=100)),
                ('logo', models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='ConfigChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Required and Unique', max_length=255, unique=True, verbose_name='Config Choice Name')),
                ('description', models.TextField()),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', slugify=commons.models.slugify, verbose_name='Config Choice Slug')),
            ],
            options={
                'verbose_name': 'Config Choice',
                'verbose_name_plural': 'Config Choices',
            },
        ),
        migrations.CreateModel(
            name='ConfigChoiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required and Unique', max_length=255, unique=True, verbose_name='Config Choice Category Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', slugify=commons.models.slugify, verbose_name='Config Choice Category Slug')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Config Choice Category',
                'verbose_name_plural': ' Config Choice Categories',
            },
        ),
    ]
